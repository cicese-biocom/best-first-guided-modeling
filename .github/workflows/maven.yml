name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Configure Git identity using committer info
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Get version from commits count
        id: versioning
        run: |
          VERSION=$(git rev-list --count HEAD)
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Update version in POM
        run: |
          sed -i "/<artifactId>best-first-guided-modeling<\/artifactId>/!b;n;c<version>1.0.${{ env.version }}</version>" pom.xml

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Create JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: best-first-guided-modeling-1.0.${{ env.version }}.jar
          path: target/best-first-guided-modeling-1.0.${{ env.version }}.jar
        env:
          GITHUB_ACTOR: ${{ secrets.USER_NAME }}
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Create a Git tag
        run: |
          git tag -a "v1.0.${{ env.version }}" -m "Release version 1.0.${{ env.version }}"
          git push origin "v1.0.${{ env.version }}"
        env:
          GITHUB_ACTOR: ${{ secrets.USER_NAME }}
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}


      - name: Create a GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/best-first-guided-modeling-1.0.${{ env.version }}.jar
          tag_name: "v1.0.${{ env.version }}"
        env:
          GITHUB_ACTOR: ${{ secrets.USER_NAME }}
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: List files in target
        run: ls -l target
